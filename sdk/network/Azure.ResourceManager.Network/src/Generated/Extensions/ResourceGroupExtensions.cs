// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;
using Azure.ResourceManager.Core;
using Azure.ResourceManager.Network.Models;

namespace Azure.ResourceManager.Network
{
    /// <summary> A class to add extension methods to ResourceGroup. </summary>
    public static partial class ResourceGroupExtensions
    {
        #region ApplicationGateways
        /// <summary> Gets an object representing a ApplicationGatewayContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="ApplicationGatewayContainer" /> object. </returns>
        public static ApplicationGatewayContainer GetApplicationGateways(this ResourceGroupOperations resourceGroup)
        {
            return new ApplicationGatewayContainer(resourceGroup);
        }
        #endregion

        #region VirtualNetworkTaps
        /// <summary> Gets an object representing a VirtualNetworkTapContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="VirtualNetworkTapContainer" /> object. </returns>
        public static VirtualNetworkTapContainer GetVirtualNetworkTaps(this ResourceGroupOperations resourceGroup)
        {
            return new VirtualNetworkTapContainer(resourceGroup);
        }
        #endregion

        #region NetworkSecurityGroups
        /// <summary> Gets an object representing a NetworkSecurityGroupContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="NetworkSecurityGroupContainer" /> object. </returns>
        public static NetworkSecurityGroupContainer GetNetworkSecurityGroups(this ResourceGroupOperations resourceGroup)
        {
            return new NetworkSecurityGroupContainer(resourceGroup);
        }
        #endregion

        #region ApplicationSecurityGroups
        /// <summary> Gets an object representing a ApplicationSecurityGroupContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="ApplicationSecurityGroupContainer" /> object. </returns>
        public static ApplicationSecurityGroupContainer GetApplicationSecurityGroups(this ResourceGroupOperations resourceGroup)
        {
            return new ApplicationSecurityGroupContainer(resourceGroup);
        }
        #endregion

        #region NetworkInterfaces
        /// <summary> Gets an object representing a NetworkInterfaceContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="NetworkInterfaceContainer" /> object. </returns>
        public static NetworkInterfaceContainer GetNetworkInterfaces(this ResourceGroupOperations resourceGroup)
        {
            return new NetworkInterfaceContainer(resourceGroup);
        }
        #endregion

        #region PrivateEndpoints
        /// <summary> Gets an object representing a PrivateEndpointContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="PrivateEndpointContainer" /> object. </returns>
        public static PrivateEndpointContainer GetPrivateEndpoints(this ResourceGroupOperations resourceGroup)
        {
            return new PrivateEndpointContainer(resourceGroup);
        }
        #endregion

        #region PrivateLinkServices
        /// <summary> Gets an object representing a PrivateLinkServiceContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="PrivateLinkServiceContainer" /> object. </returns>
        public static PrivateLinkServiceContainer GetPrivateLinkServices(this ResourceGroupOperations resourceGroup)
        {
            return new PrivateLinkServiceContainer(resourceGroup);
        }
        #endregion

        #region RouteTables
        /// <summary> Gets an object representing a RouteTableContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="RouteTableContainer" /> object. </returns>
        public static RouteTableContainer GetRouteTables(this ResourceGroupOperations resourceGroup)
        {
            return new RouteTableContainer(resourceGroup);
        }
        #endregion

        #region ServiceEndpointPolicys
        /// <summary> Gets an object representing a ServiceEndpointPolicyContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="ServiceEndpointPolicyContainer" /> object. </returns>
        public static ServiceEndpointPolicyContainer GetServiceEndpointPolicies(this ResourceGroupOperations resourceGroup)
        {
            return new ServiceEndpointPolicyContainer(resourceGroup);
        }
        #endregion

        #region PublicIPAddresss
        /// <summary> Gets an object representing a PublicIPAddressContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="PublicIPAddressContainer" /> object. </returns>
        public static PublicIPAddressContainer GetPublicIPAddresses(this ResourceGroupOperations resourceGroup)
        {
            return new PublicIPAddressContainer(resourceGroup);
        }
        #endregion

        #region NatGateways
        /// <summary> Gets an object representing a NatGatewayContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="NatGatewayContainer" /> object. </returns>
        public static NatGatewayContainer GetNatGateways(this ResourceGroupOperations resourceGroup)
        {
            return new NatGatewayContainer(resourceGroup);
        }
        #endregion

        #region AzureFirewalls
        /// <summary> Gets an object representing a AzureFirewallContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="AzureFirewallContainer" /> object. </returns>
        public static AzureFirewallContainer GetAzureFirewalls(this ResourceGroupOperations resourceGroup)
        {
            return new AzureFirewallContainer(resourceGroup);
        }
        #endregion

        #region BastionHosts
        /// <summary> Gets an object representing a BastionHostContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="BastionHostContainer" /> object. </returns>
        public static BastionHostContainer GetBastionHosts(this ResourceGroupOperations resourceGroup)
        {
            return new BastionHostContainer(resourceGroup);
        }
        #endregion

        #region CustomIpPrefixs
        /// <summary> Gets an object representing a CustomIpPrefixContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="CustomIpPrefixContainer" /> object. </returns>
        public static CustomIpPrefixContainer GetCustomIpPrefixes(this ResourceGroupOperations resourceGroup)
        {
            return new CustomIpPrefixContainer(resourceGroup);
        }
        #endregion

        #region DdosCustomPolicys
        /// <summary> Gets an object representing a DdosCustomPolicyContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="DdosCustomPolicyContainer" /> object. </returns>
        public static DdosCustomPolicyContainer GetDdosCustomPolicies(this ResourceGroupOperations resourceGroup)
        {
            return new DdosCustomPolicyContainer(resourceGroup);
        }
        #endregion

        #region DdosProtectionPlans
        /// <summary> Gets an object representing a DdosProtectionPlanContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="DdosProtectionPlanContainer" /> object. </returns>
        public static DdosProtectionPlanContainer GetDdosProtectionPlans(this ResourceGroupOperations resourceGroup)
        {
            return new DdosProtectionPlanContainer(resourceGroup);
        }
        #endregion

        #region DscpConfigurations
        /// <summary> Gets an object representing a DscpConfigurationContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="DscpConfigurationContainer" /> object. </returns>
        public static DscpConfigurationContainer GetDscpConfigurations(this ResourceGroupOperations resourceGroup)
        {
            return new DscpConfigurationContainer(resourceGroup);
        }
        #endregion

        #region ExpressRouteCircuits
        /// <summary> Gets an object representing a ExpressRouteCircuitContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="ExpressRouteCircuitContainer" /> object. </returns>
        public static ExpressRouteCircuitContainer GetExpressRouteCircuits(this ResourceGroupOperations resourceGroup)
        {
            return new ExpressRouteCircuitContainer(resourceGroup);
        }
        #endregion

        #region ExpressRouteCrossConnections
        /// <summary> Gets an object representing a ExpressRouteCrossConnectionContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="ExpressRouteCrossConnectionContainer" /> object. </returns>
        public static ExpressRouteCrossConnectionContainer GetExpressRouteCrossConnections(this ResourceGroupOperations resourceGroup)
        {
            return new ExpressRouteCrossConnectionContainer(resourceGroup);
        }
        #endregion

        #region ExpressRoutePorts
        /// <summary> Gets an object representing a ExpressRoutePortContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="ExpressRoutePortContainer" /> object. </returns>
        public static ExpressRoutePortContainer GetExpressRoutePorts(this ResourceGroupOperations resourceGroup)
        {
            return new ExpressRoutePortContainer(resourceGroup);
        }
        #endregion

        #region FirewallPolicys
        /// <summary> Gets an object representing a FirewallPolicyContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="FirewallPolicyContainer" /> object. </returns>
        public static FirewallPolicyContainer GetFirewallPolicies(this ResourceGroupOperations resourceGroup)
        {
            return new FirewallPolicyContainer(resourceGroup);
        }
        #endregion

        #region IpAllocations
        /// <summary> Gets an object representing a IpAllocationContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="IpAllocationContainer" /> object. </returns>
        public static IpAllocationContainer GetIpAllocations(this ResourceGroupOperations resourceGroup)
        {
            return new IpAllocationContainer(resourceGroup);
        }
        #endregion

        #region IpGroups
        /// <summary> Gets an object representing a IpGroupContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="IpGroupContainer" /> object. </returns>
        public static IpGroupContainer GetIpGroups(this ResourceGroupOperations resourceGroup)
        {
            return new IpGroupContainer(resourceGroup);
        }
        #endregion

        #region LoadBalancers
        /// <summary> Gets an object representing a LoadBalancerContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="LoadBalancerContainer" /> object. </returns>
        public static LoadBalancerContainer GetLoadBalancers(this ResourceGroupOperations resourceGroup)
        {
            return new LoadBalancerContainer(resourceGroup);
        }
        #endregion

        #region NetworkProfiles
        /// <summary> Gets an object representing a NetworkProfileContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="NetworkProfileContainer" /> object. </returns>
        public static NetworkProfileContainer GetNetworkProfiles(this ResourceGroupOperations resourceGroup)
        {
            return new NetworkProfileContainer(resourceGroup);
        }
        #endregion

        #region NetworkVirtualAppliances
        /// <summary> Gets an object representing a NetworkVirtualApplianceContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="NetworkVirtualApplianceContainer" /> object. </returns>
        public static NetworkVirtualApplianceContainer GetNetworkVirtualAppliances(this ResourceGroupOperations resourceGroup)
        {
            return new NetworkVirtualApplianceContainer(resourceGroup);
        }
        #endregion

        #region NetworkWatchers
        /// <summary> Gets an object representing a NetworkWatcherContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="NetworkWatcherContainer" /> object. </returns>
        public static NetworkWatcherContainer GetNetworkWatchers(this ResourceGroupOperations resourceGroup)
        {
            return new NetworkWatcherContainer(resourceGroup);
        }
        #endregion

        #region PublicIPPrefixs
        /// <summary> Gets an object representing a PublicIPPrefixContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="PublicIPPrefixContainer" /> object. </returns>
        public static PublicIPPrefixContainer GetPublicIPPrefixes(this ResourceGroupOperations resourceGroup)
        {
            return new PublicIPPrefixContainer(resourceGroup);
        }
        #endregion

        #region RouteFilters
        /// <summary> Gets an object representing a RouteFilterContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="RouteFilterContainer" /> object. </returns>
        public static RouteFilterContainer GetRouteFilters(this ResourceGroupOperations resourceGroup)
        {
            return new RouteFilterContainer(resourceGroup);
        }
        #endregion

        #region SecurityPartnerProviders
        /// <summary> Gets an object representing a SecurityPartnerProviderContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="SecurityPartnerProviderContainer" /> object. </returns>
        public static SecurityPartnerProviderContainer GetSecurityPartnerProviders(this ResourceGroupOperations resourceGroup)
        {
            return new SecurityPartnerProviderContainer(resourceGroup);
        }
        #endregion

        #region VirtualNetworks
        /// <summary> Gets an object representing a VirtualNetworkContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="VirtualNetworkContainer" /> object. </returns>
        public static VirtualNetworkContainer GetVirtualNetworks(this ResourceGroupOperations resourceGroup)
        {
            return new VirtualNetworkContainer(resourceGroup);
        }
        #endregion

        #region VirtualNetworkGateways
        /// <summary> Gets an object representing a VirtualNetworkGatewayContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="VirtualNetworkGatewayContainer" /> object. </returns>
        public static VirtualNetworkGatewayContainer GetVirtualNetworkGateways(this ResourceGroupOperations resourceGroup)
        {
            return new VirtualNetworkGatewayContainer(resourceGroup);
        }
        #endregion

        #region VirtualNetworkGatewayConnections
        /// <summary> Gets an object representing a VirtualNetworkGatewayConnectionContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="VirtualNetworkGatewayConnectionContainer" /> object. </returns>
        public static VirtualNetworkGatewayConnectionContainer GetVirtualNetworkGatewayConnections(this ResourceGroupOperations resourceGroup)
        {
            return new VirtualNetworkGatewayConnectionContainer(resourceGroup);
        }
        #endregion

        #region LocalNetworkGateways
        /// <summary> Gets an object representing a LocalNetworkGatewayContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="LocalNetworkGatewayContainer" /> object. </returns>
        public static LocalNetworkGatewayContainer GetLocalNetworkGateways(this ResourceGroupOperations resourceGroup)
        {
            return new LocalNetworkGatewayContainer(resourceGroup);
        }
        #endregion

        #region VirtualRouters
        /// <summary> Gets an object representing a VirtualRouterContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="VirtualRouterContainer" /> object. </returns>
        public static VirtualRouterContainer GetVirtualRouters(this ResourceGroupOperations resourceGroup)
        {
            return new VirtualRouterContainer(resourceGroup);
        }
        #endregion

        #region VirtualWANs
        /// <summary> Gets an object representing a VirtualWANContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="VirtualWANContainer" /> object. </returns>
        public static VirtualWANContainer GetVirtualWANs(this ResourceGroupOperations resourceGroup)
        {
            return new VirtualWANContainer(resourceGroup);
        }
        #endregion

        #region VpnSites
        /// <summary> Gets an object representing a VpnSiteContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="VpnSiteContainer" /> object. </returns>
        public static VpnSiteContainer GetVpnSites(this ResourceGroupOperations resourceGroup)
        {
            return new VpnSiteContainer(resourceGroup);
        }
        #endregion

        #region VpnServerConfigurations
        /// <summary> Gets an object representing a VpnServerConfigurationContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="VpnServerConfigurationContainer" /> object. </returns>
        public static VpnServerConfigurationContainer GetVpnServerConfigurations(this ResourceGroupOperations resourceGroup)
        {
            return new VpnServerConfigurationContainer(resourceGroup);
        }
        #endregion

        #region P2SVpnGateways
        /// <summary> Gets an object representing a P2SVpnGatewayContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="P2SVpnGatewayContainer" /> object. </returns>
        public static P2SVpnGatewayContainer GetP2SVpnGateways(this ResourceGroupOperations resourceGroup)
        {
            return new P2SVpnGatewayContainer(resourceGroup);
        }
        #endregion

        #region VirtualHubs
        /// <summary> Gets an object representing a VirtualHubContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="VirtualHubContainer" /> object. </returns>
        public static VirtualHubContainer GetVirtualHubs(this ResourceGroupOperations resourceGroup)
        {
            return new VirtualHubContainer(resourceGroup);
        }
        #endregion

        #region VpnGateways
        /// <summary> Gets an object representing a VpnGatewayContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="VpnGatewayContainer" /> object. </returns>
        public static VpnGatewayContainer GetVpnGateways(this ResourceGroupOperations resourceGroup)
        {
            return new VpnGatewayContainer(resourceGroup);
        }
        #endregion

        #region ExpressRouteGateways
        /// <summary> Gets an object representing a ExpressRouteGatewayContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="ExpressRouteGatewayContainer" /> object. </returns>
        public static ExpressRouteGatewayContainer GetExpressRouteGateways(this ResourceGroupOperations resourceGroup)
        {
            return new ExpressRouteGatewayContainer(resourceGroup);
        }
        #endregion

        #region WebApplicationFirewallPolicys
        /// <summary> Gets an object representing a WebApplicationFirewallPolicyContainer along with the instance operations that can be performed on it. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <returns> Returns a <see cref="WebApplicationFirewallPolicyContainer" /> object. </returns>
        public static WebApplicationFirewallPolicyContainer GetWebApplicationFirewallPolicies(this ResourceGroupOperations resourceGroup)
        {
            return new WebApplicationFirewallPolicyContainer(resourceGroup);
        }
        #endregion

        #region AvailableDelegation
        private static AvailableDelegationsRestOperations GetAvailableDelegationsRestOperations(ClientDiagnostics clientDiagnostics, TokenCredential credential, ArmClientOptions clientOptions, HttpPipeline pipeline, string subscriptionId, Uri endpoint = null)
        {
            return new AvailableDelegationsRestOperations(clientDiagnostics, pipeline, subscriptionId, endpoint);
        }

        /// <summary> Lists the AvailableDelegations for this ResourceGroupOperations. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <param name="location"> The location of the subnet. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of resource operations that may take multiple service requests to iterate over. </returns>
        /// <exception cref="ArgumentNullException"> <paramref name="location"/> is null. </exception>
        public static AsyncPageable<AvailableDelegation> ListAvailableDelegationsAsync(this ResourceGroupOperations resourceGroup, string location, CancellationToken cancellationToken = default)
        {
            if (location == null)
            {
                throw new ArgumentNullException(nameof(location));
            }

            return resourceGroup.UseClientContext((baseUri, credential, options, pipeline) =>
            {
                var clientDiagnostics = new ClientDiagnostics(options);
                var restOperations = GetAvailableDelegationsRestOperations(clientDiagnostics, credential, options, pipeline, resourceGroup.Id.SubscriptionId, baseUri);
                async Task<Page<AvailableDelegation>> FirstPageFunc(int? pageSizeHint)
                {
                    using var scope = clientDiagnostics.CreateScope("ResourceGroupExtensions.ListAvailableDelegations");
                    scope.Start();
                    try
                    {
                        var response = await restOperations.ListAsync(location, cancellationToken: cancellationToken).ConfigureAwait(false);
                        return Page.FromValues(response.Value.Value, response.Value.NextLink, response.GetRawResponse());
                    }
                    catch (Exception e)
                    {
                        scope.Failed(e);
                        throw;
                    }
                }
                async Task<Page<AvailableDelegation>> NextPageFunc(string nextLink, int? pageSizeHint)
                {
                    using var scope = clientDiagnostics.CreateScope("ResourceGroupExtensions.ListAvailableDelegations");
                    scope.Start();
                    try
                    {
                        var response = await restOperations.ListNextPageAsync(nextLink, location, cancellationToken: cancellationToken).ConfigureAwait(false);
                        return Page.FromValues(response.Value.Value, response.Value.NextLink, response.GetRawResponse());
                    }
                    catch (Exception e)
                    {
                        scope.Failed(e);
                        throw;
                    }
                }
                return PageableHelpers.CreateAsyncEnumerable(FirstPageFunc, NextPageFunc);
            }
            );
        }

        /// <summary> Lists the AvailableDelegations for this ResourceGroupOperations. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <param name="location"> The location of the subnet. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of resource operations that may take multiple service requests to iterate over. </returns>
        /// <exception cref="ArgumentNullException"> <paramref name="location"/> is null. </exception>
        public static Pageable<AvailableDelegation> ListAvailableDelegations(this ResourceGroupOperations resourceGroup, string location, CancellationToken cancellationToken = default)
        {
            if (location == null)
            {
                throw new ArgumentNullException(nameof(location));
            }

            return resourceGroup.UseClientContext((baseUri, credential, options, pipeline) =>
            {
                var clientDiagnostics = new ClientDiagnostics(options);
                var restOperations = GetAvailableDelegationsRestOperations(clientDiagnostics, credential, options, pipeline, resourceGroup.Id.SubscriptionId, baseUri);
                Page<AvailableDelegation> FirstPageFunc(int? pageSizeHint)
                {
                    using var scope = clientDiagnostics.CreateScope("ResourceGroupExtensions.ListAvailableDelegations");
                    scope.Start();
                    try
                    {
                        var response = restOperations.List(location, cancellationToken: cancellationToken);
                        return Page.FromValues(response.Value.Value, response.Value.NextLink, response.GetRawResponse());
                    }
                    catch (Exception e)
                    {
                        scope.Failed(e);
                        throw;
                    }
                }
                Page<AvailableDelegation> NextPageFunc(string nextLink, int? pageSizeHint)
                {
                    using var scope = clientDiagnostics.CreateScope("ResourceGroupExtensions.ListAvailableDelegations");
                    scope.Start();
                    try
                    {
                        var response = restOperations.ListNextPage(nextLink, location, cancellationToken: cancellationToken);
                        return Page.FromValues(response.Value.Value, response.Value.NextLink, response.GetRawResponse());
                    }
                    catch (Exception e)
                    {
                        scope.Failed(e);
                        throw;
                    }
                }
                return PageableHelpers.CreateEnumerable(FirstPageFunc, NextPageFunc);
            }
            );
        }

        /// <summary> Lists the AvailableDelegations for this ResourceGroupOperations. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <param name="location"> The location of the domain name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of resource operations that may take multiple service requests to iterate over. </returns>
        /// <exception cref="ArgumentNullException"> <paramref name="location"/> is null. </exception>
        public static AsyncPageable<AvailableDelegation> ListAvailableDelegationsByResourceGroupAsync(this ResourceGroupOperations resourceGroup, string location, CancellationToken cancellationToken = default)
        {
            if (location == null)
            {
                throw new ArgumentNullException(nameof(location));
            }

            return resourceGroup.UseClientContext((baseUri, credential, options, pipeline) =>
            {
                var clientDiagnostics = new ClientDiagnostics(options);
                var restOperations = GetAvailableDelegationsRestOperations(clientDiagnostics, credential, options, pipeline, resourceGroup.Id.SubscriptionId, baseUri);
                async Task<Page<AvailableDelegation>> FirstPageFunc(int? pageSizeHint)
                {
                    using var scope = clientDiagnostics.CreateScope("ResourceGroupExtensions.ListAvailableDelegationsByResourceGroup");
                    scope.Start();
                    try
                    {
                        var response = await restOperations.ListByResourceGroupAsync(location, resourceGroup.Id.Name, cancellationToken: cancellationToken).ConfigureAwait(false);
                        return Page.FromValues(response.Value.Value, response.Value.NextLink, response.GetRawResponse());
                    }
                    catch (Exception e)
                    {
                        scope.Failed(e);
                        throw;
                    }
                }
                async Task<Page<AvailableDelegation>> NextPageFunc(string nextLink, int? pageSizeHint)
                {
                    using var scope = clientDiagnostics.CreateScope("ResourceGroupExtensions.ListAvailableDelegationsByResourceGroup");
                    scope.Start();
                    try
                    {
                        var response = await restOperations.ListByResourceGroupNextPageAsync(nextLink, location, resourceGroup.Id.Name, cancellationToken: cancellationToken).ConfigureAwait(false);
                        return Page.FromValues(response.Value.Value, response.Value.NextLink, response.GetRawResponse());
                    }
                    catch (Exception e)
                    {
                        scope.Failed(e);
                        throw;
                    }
                }
                return PageableHelpers.CreateAsyncEnumerable(FirstPageFunc, NextPageFunc);
            }
            );
        }

        /// <summary> Lists the AvailableDelegations for this ResourceGroupOperations. </summary>
        /// <param name="resourceGroup"> The <see cref="ResourceGroupOperations" /> instance the method will execute against. </param>
        /// <param name="location"> The location of the domain name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <returns> A collection of resource operations that may take multiple service requests to iterate over. </returns>
        /// <exception cref="ArgumentNullException"> <paramref name="location"/> is null. </exception>
        public static Pageable<AvailableDelegation> ListAvailableDelegationsByResourceGroup(this ResourceGroupOperations resourceGroup, string location, CancellationToken cancellationToken = default)
        {
            if (location == null)
            {
                throw new ArgumentNullException(nameof(location));
            }

            return resourceGroup.UseClientContext((baseUri, credential, options, pipeline) =>
            {
                var clientDiagnostics = new ClientDiagnostics(options);
                var restOperations = GetAvailableDelegationsRestOperations(clientDiagnostics, credential, options, pipeline, resourceGroup.Id.SubscriptionId, baseUri);
                Page<AvailableDelegation> FirstPageFunc(int? pageSizeHint)
                {
                    using var scope = clientDiagnostics.CreateScope("ResourceGroupExtensions.ListAvailableDelegationsByResourceGroup");
                    scope.Start();
                    try
                    {
                        var response = restOperations.ListByResourceGroup(location, resourceGroup.Id.Name, cancellationToken: cancellationToken);
                        return Page.FromValues(response.Value.Value, response.Value.NextLink, response.GetRawResponse());
                    }
                    catch (Exception e)
                    {
                        scope.Failed(e);
                        throw;
                    }
                }
                Page<AvailableDelegation> NextPageFunc(string nextLink, int? pageSizeHint)
                {
                    using var scope = clientDiagnostics.CreateScope("ResourceGroupExtensions.ListAvailableDelegationsByResourceGroup");
                    scope.Start();
                    try
                    {
                        var response = restOperations.ListByResourceGroupNextPage(nextLink, location, resourceGroup.Id.Name, cancellationToken: cancellationToken);
                        return Page.FromValues(response.Value.Value, response.Value.NextLink, response.GetRawResponse());
                    }
                    catch (Exception e)
                    {
                        scope.Failed(e);
                        throw;
                    }
                }
                return PageableHelpers.CreateEnumerable(FirstPageFunc, NextPageFunc);
            }
            );
        }

        #endregion
    }
}
